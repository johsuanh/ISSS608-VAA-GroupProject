{
  "hash": "921544b97d59bd3b3392f89ae5924925",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Project Proposal: Wheather or Not – Predicting the Unpredictable\"\ndate: 2024-03-08\ndate-modified: \"last-modified\"\nexecute:\n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n---\n\n\n\n# 1 Motivation\n\nClimate change is a critical global issue, and Singapore is no exception. As a tropical country, Singapore experiences consistently hot and humid weather. However, climate change has intensified extreme weather events, leading to higher temperatures, floods, and even droughts. These changes disproportionately affect low-income and elderly residents who may struggle to afford air conditioning or improve their living conditions.\n\nTo address this, our team will use open-source weather data to analyze temperature and rainfall patterns across Singapore. By collecting data from four weather stations in the East, Central, West, and North regions, we aim to create visualizations and forecasts that provide a comprehensive understanding of local weather trends.\n\n# ⁠2 Objective\n\nThe objectives of this proposal are to:\n\n-   Develop a Shiny App with interactive visualizations to help users better understand Singapore's weather patterns.\n\n-   Analyze and compare weather variations across 10 AWS stations, with a focus on areas where lower-income and elderly residents are concentrated, to generate meaningful insights.\n\n# 3 Data\n\nThe [historical weather data](https://www.weather.gov.sg/climate-historical-daily/) from Meteorological Service Singapore will be used for analysis. We will collect data from 10 AWS stations across Singapore between January 2020 and January 2025.\n\nTo enhance our analysis and visualization, we will also incorporate 2020 Singapore census data, including [Monthly Household Income from Work by Planning Area](https://tablebuilder.singstat.gov.sg/table/CT/17779)and [Resident Population by Planning Area and Age Group](https://data.gov.sg/datasets/d_9e035622439b5d25a63d7ea0699c9451/view) as additional tmap layers.\n\n# 4 Methodology\n\nThere will be three main components in our Shiny App: \n\n## 4.1 Exploratory Data Analysis (EDA)\n\nThrough an interactive Shiny App visualization, users can analyze patterns and explore relationships between temporal data, rainfall, temperature, wind speed, and geographical features.\n\nThe following visualization methods will be used in our exploratory data analysis:\n\n#### **Univariate Analysis** \n\n-   **Histogram:** visualize univaritae weather data\n\n#### **Bivariate Analysis**\n\n-   **Half Eye graph + box plot:** visualize weather data by combining density plot and box plot and by station.\n\n#### **Multivariate Analysis**  \n\n-   **Scatter Plot** : compare temperature with rainfall (or windspeed) and colored by station or region.\n\n#### **Time Series Analysis**  \n\n-   **Line chart of time-series data:** visualize weather data by station overtimes \n\n#### **Geospatial Analysis**\n\n-   **Choropleth Maps:** using the tmap package, we will plot weather data across stations with yearly facets and overlay census data layers. This visualization will enable users to analyze the social impact of extreme weather conditions by comparing areas that experience high temperatures with regions having higher concentrations of low-income or elderly residents.\n\n## 4.2 Confirmatory Data Analysis (CDA)\n\nAfter EDA, user can apply the following statistical tests to confirm whether mean rainfall or temperature differs across stations:\n\n#### **Normality Test**\n\n-   **Shapiro-Wilk Test** : check if the data follows a normal distribution, which will affect which statistical parameters to use in the analysis \n\n#### **Parametric Tests (comparing multiple groups)**\n\n-   **One-way ANOVA test:** Comparing mean rainfall or temperature across stations \n-   **Two-way ANOVA test:** Comparing mean rainfall or temperature across both station and month \n\n#### **Non-Parametric Tests (comparing multiple groups)** \n\n-   **Kruskal-Wallis Test:** Comparing median rainfall or temperature across stations or both station and month \n\n## 4.3 Forecasting\n\n#### **Plots**\n\n-   **ACF & PCF plots :** help users understand the autocorrelation in time series data and identify which lags might be useful for forecasting model. \n-   **STL plots:** help decompose the time series into its seasonal, trend, and remainder components, providing insight into the structure of the data. \n\n#### **Forecasting Models**\n\n-   **ARIMA Models:**  \n    -   **Auto ARIMA:** when there is a mix of trend and seasonal patterns with autocorrelation, user can use auto ARIMA, which automatically selects the best parameters (AR, I, MA) based on the data \n    -   **STL ARIMA:** when there are complex seasonality or non-linear trends in the data, user can choose this model for weather forecasting\n-   **ETS Models:**  \n    -   **Auto ETS:** user can choose this model if the data shows clear, stable trends or seasonal patterns with little noise  \n\n# 5 R Packages\n\nThe R packages we will be using for the project include:\n\n| Package | Description |\n|------------------------------------|------------------------------------|\n| [tidyverse](https://www.tidyverse.org/) | For data manipulation |\n| [DT](https://rstudio.github.io/DT/) | For interactive data tables |\n| [knitr](https://yihui.org/knitr/) | For dynamic report generation with R |\n| [ggstatplot](https://indrajeetpatil.github.io/ggstatsplot/) | To visual correlation matrix and plots with statistical tests |\n| [plotly](https://plotly.com/r/) | For interactive, publication-quality plots |\n| [ggiraph](https://davidgohel.github.io/ggiraph/) | For dynamic, interactive ggplot2 graphs. |\n| [scales](https://scales.r-lib.org/) | For data labels and annotations for ggplot2 |\n| [patchwork](https://patchwork.data-imaginist.com/) | For preparing composite figure created using ggplot2. |\n| [ggdist](https://mjskay.github.io/ggdist/) | For visualisations of distributions and uncertainty. |\n| [ggtext](https://wilkelab.org/ggtext/) | Providing simple Markdown and HTML rendering for ggplot2 |\n| [ggridges](https://cran.r-project.org/web/packages/ggridges/vignettes/introduction.html) | For ridgeline plots that create the impression of a mountain range. They can be useful for visualising changes in distributions over time or space. |\n| [heatmaply](http://talgalili.github.io/heatmaply/) | For building interactive cluster heatmap. |\n| [lubridate](https://lubridate.tidyverse.org) | For handling date-time data |\n| [tsibble](https://tsibble.tidyverts.org) | For tidy temporal data with wrangling tools |\n| [feasts](https://feasts.tidyverts.org) | For analysing tidy time series data with decomposition methods (STL), statistical summaries and graphics functions(cycle plot) |\n| [fable](https://fable.tidyverts.org) | Forecasting models for tidy time series data |\n| [tmap](https://r-tmap.github.io/tmap/reference/index.html) | For drawing thematic maps |\n| [sf](https://r-spatial.github.io/sf/) | Providing a standardized way to encode and analyze spatial vector data |\n\n# 6 Dashboard Prototype\n\nBelow is the Prototype for EDA panel:\n\n::: panel-tabset\n## Bivariate Analysis\n\n![](/images/prototype/prototype-2.png){fig-align=\"center\"}\n\n## Multivariate Analysis\n\n![](/images/prototype/prototype-2.png){fig-align=\"center\"}\n\n## Time Series Analysis\n\n![](/images/prototype/prototype-3.png){fig-align=\"center\"}\n\n## Geospatial Analysis\n\n![](/images/prototype/prototype-4.png){fig-align=\"center\"}\n:::\n\n# 7 Project Schedule\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"timevis html-widget html-fill-item\" id=\"htmlwidget-d196e91a5457e01538c7\" style=\"width:100%;height:464px;\">\n<div class=\"btn-group zoom-menu\">\n<button type=\"button\" class=\"btn btn-default btn-lg zoom-in\" title=\"Zoom in\">+</button>\n<button type=\"button\" class=\"btn btn-default btn-lg zoom-out\" title=\"Zoom out\">-</button>\n</div>\n</div>\n<script type=\"application/json\" data-for=\"htmlwidget-d196e91a5457e01538c7\">{\"x\":{\"items\":[{\"id\":\"1\",\"content\":\"Explore Idea\",\"start\":\"3/1/25\",\"end\":\"3/3/25\"},{\"id\":\"2\",\"content\":\"Finalize Topic\",\"start\":\"3/3/25\"},{\"id\":\"3\",\"content\":\"Setup GitHub and Netlify\",\"start\":\"3/7/25\"},{\"id\":\"4\",\"content\":\"Project Proposal\",\"start\":\"3/7/25\",\"end\":\"3/9/25\"},{\"id\":\"5\",\"content\":\"Data Preparation & Exploration \",\"start\":\"3/8/25\",\"end\":\"3/10/25\"},{\"id\":\"6\",\"content\":\"Website Design and Shiny App \",\"start\":\"3/11/25\",\"end\":\"3/26/25\"},{\"id\":\"7\",\"content\":\"User Guide\",\"start\":\"3/26/25\",\"end\":\"3/29/25\"},{\"id\":\"8\",\"content\":\"Poster\",\"start\":\"3/26/25\",\"end\":\"3/29/25\"},{\"id\":\"9\",\"content\":\"Final Meeting\",\"start\":\"3/27/25\"},{\"id\":\"10\",\"content\":\"Final Submission\",\"start\":\"4/6/25\"}],\"groups\":null,\"showZoom\":true,\"zoomFactor\":0.5,\"fit\":true,\"options\":[],\"height\":null,\"timezone\":null,\"api\":[]},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../site_libs/visjs-7.4.9/vis-timeline-graph2d.min.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/visjs-7.4.9/vis-timeline-graph2d.min.js\"></script>\n<link href=\"../site_libs/timeline-0.4/timevis.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/timevis-binding-2.1.0/timevis.js\"></script>\n<script src=\"../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}